package com.dao.Forum;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

//import javax.transaction.Transactional;

import org.hibernate.SQLQuery;
import org.hibernate.SessionFactory;

import org.springframework.stereotype.Repository;

import com.model.*;

@Repository
public class ForumDAOImpl implements ForumDAO {
	
	//private static final Logger log=LoggerFactory.getLogger(UserDAOImpl.class);
	
	private SessionFactory sessionFactory;
	
	ForumDAOImpl(SessionFactory sessionFactory)
	{
		this.sessionFactory=sessionFactory;
	}

	
	public User getUserById(String userID) {
	
	}

	public List<User> getAllUsers(String uid) {
		String sql="select userID,userName from User where userID <> '"+uid+"' and userid not in(select friendid from user_friends where userID='"+uid+"')";
		 
		List<Object> list=sessionFactory.getCurrentSession().createSQLQuery(sql).list();
		
		List<User> returnList=new ArrayList<User>();
		User usr;
		for(int i=0;i<list.size();i++){
			usr=new User();
			Object[] obj=(Object[]) list.get(i);
			usr.setUserID((String) obj[0]);
			usr.setUserName((String) obj[1]);
			
			returnList.add(usr);
			
		}
		System.out.println(""+returnList.size());	
		return returnList;
		
		
		//return sessionFactory.getCurrentSession().createQuery("from User where userID<>"+uid).list();
	}

	public List<Friend> getAllFriendsOfUser(String userID) {
		User user=(User) getUserById(userID);
		return user.getUserFriends();
	}
	
	public List<Friend> getFriendsOfUser(String userID){
		System.out.println("impl meth"+userID);
		String sql="select userID,friendId,friendStatus from USER_FRIENDS where USERID=:userID and FRIENDSTATUS='Friend'";
		SQLQuery query=sessionFactory.getCurrentSession().createSQLQuery(sql);
		query.setParameter("userID", userID);
		List<Object> queryList=query.list();
		List<Friend> returnList=new ArrayList<Friend>();
		Friend frd;
		for(int i=0;i<queryList.size();i++){
			frd=new Friend();
			Object[] obj=(Object[]) queryList.get(i);
			frd.setUserID((String) obj[0]);
			frd.setFriendId((String) obj[1]);
			frd.setFriendStatus((String)obj[2]);
			
				frd.setIsOnline('N' );
			returnList.add(frd);
		}
		System.out.println(""+returnList.size());
		return returnList;
	}


	public boolean createForum(Forum forum) {
		try{
			sessionFactory.getCurrentSession().save(forum);
			return true;
		}
		catch(Exception e){
			System.err.println(e);
			return false;
		}

	}

	public Forum getForumById(long ForumID) {
		return  (Forum) sessionFactory.getCurrentSession().get(Forum.class, ForumID);
	}

	public List<Forum> getAllForum(String uid) {
		// TODO Auto-generated method stub
		return null;
	}

	public List<Members> getMembers(long ForumID) {
		// TODO Auto-generated method stub
		return null;
	}

	

}
